{"ast":null,"code":"import _classCallCheck from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/conrad/Desktop/game-of-life/src/Cell.js\";\nimport React from 'react';\nexport var Cell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cell, _React$Component);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this.state = {\n      alive: false\n    };\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      // toggle state when clicked on\n      this.setState({\n        alive: !this.state.alive\n      }); // turn boolean into 0 or 1 for use with Board array\n\n      var n = this.state.alive ? 0 : 1; // send position and value back to board\n\n      this.props.call_back(this.props.row_pos, this.props.col_pos, n);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      /* this lifecycle method allowed me to update the\n       * state of the cell anytime the nextGen() function\n       * changed to cell array in the board class\n       * (my daughter always corrects me when i do something\n       * wrong - she's only 5 but she sure is smart!\n       * I love you Cora\n       */\n      this.setState({\n        alive: nextProps.alive\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bg = this.state.alive ? '#0d0d1d' : '#d0d0f0';\n      var cellStyle = {\n        backgroundColor: bg,\n        width: this.props.width,\n        height: this.props.width\n      };\n      return React.createElement(\"td\", {\n        style: cellStyle,\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Cell;\n}(React.Component);","map":{"version":3,"sources":["/home/conrad/Desktop/game-of-life/src/Cell.js"],"names":["React","Cell","props","state","alive","setState","n","call_back","row_pos","col_pos","nextProps","bg","cellStyle","backgroundColor","width","height","handleClick","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAEC,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAHiB;AAMjB;;AARF;AAAA;AAAA,kCAUc;AACZ;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd,EAFY,CAGZ;;AACA,UAAIE,CAAC,GAAG,KAAKH,KAAL,CAAWC,KAAX,GAAmB,CAAnB,GAAqB,CAA7B,CAJY,CAKZ;;AACA,WAAKF,KAAL,CAAWK,SAAX,CAAqB,KAAKL,KAAL,CAAWM,OAAhC,EAAyC,KAAKN,KAAL,CAAWO,OAApD,EAA6DH,CAA7D;AACA;AAjBF;AAAA;AAAA,8CAmB2BI,SAnB3B,EAmBqC;AACnC;;;;;;;AAOA,WAAKL,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEM,SAAS,CAACN;AAAlB,OAAd;AACA;AA5BF;AAAA;AAAA,6BA8BS;AACP,UAAIO,EAAE,GAAG,KAAKR,KAAL,CAAWC,KAAX,GAAmB,SAAnB,GAA6B,SAAtC;AACA,UAAIQ,SAAS,GAAG;AACfC,QAAAA,eAAe,EAAEF,EADF;AAEfG,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY,KAFH;AAGfC,QAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWY;AAHJ,OAAhB;AAMA,aACE;AACD,QAAA,KAAK,EAAEF,SADN;AAED,QAAA,OAAO,EAAE,KAAKI,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMA;AA5CF;;AAAA;AAAA,EAA0BjB,KAAK,CAACkB,SAAhC","sourcesContent":["import React from 'react';\n\nexport class Cell extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\talive: false,\n\t\t};\n\t}\n\n\thandleClick(){\n\t\t// toggle state when clicked on\n\t\tthis.setState({alive: !this.state.alive,});\n\t\t// turn boolean into 0 or 1 for use with Board array\n\t\tlet n = this.state.alive ? 0:1;\n\t\t// send position and value back to board\n\t\tthis.props.call_back(this.props.row_pos, this.props.col_pos, n);\n\t}\n\n\tcomponentWillReceiveProps(nextProps){\n\t\t/* this lifecycle method allowed me to update the\n\t\t * state of the cell anytime the nextGen() function\n\t\t * changed to cell array in the board class\n\t\t * (my daughter always corrects me when i do something\n\t\t * wrong - she's only 5 but she sure is smart!\n\t\t * I love you Cora\n\t\t */\n\t\tthis.setState({alive: nextProps.alive},);\n\t}\n\n\trender(){\n\t\tlet bg = this.state.alive ? '#0d0d1d':'#d0d0f0';\n\t\tlet cellStyle = {\n\t\t\tbackgroundColor: bg,\n\t\t\twidth: this.props.width,\n\t\t\theight: this.props.width,\n\t\t};\n\n\t\treturn (\n\t\t\t\t<td \n\t\t\tstyle={cellStyle} \n\t\t\tonClick={this.handleClick.bind(this)}\n\t\t\t></td>\n\t\t\t);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}