{"ast":null,"code":"import _classCallCheck from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/conrad/Desktop/game-of-life/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/conrad/Desktop/game-of-life/src/Board.js\";\nimport React from 'react';\nimport { Cell } from './Cell.js';\nexport var Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      isRunning: false,\n      cells: _this.buildArray()\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"buildArray\",\n    value: function buildArray() {\n      var sq = [];\n      var row = Array(this.props.size).fill(0);\n\n      for (var i = 0; i < this.props.size; i++) {\n        sq.push(row);\n      }\n\n      return sq;\n    }\n  }, {\n    key: \"getNeighborCount\",\n    value: function getNeighborCount(i, j) {\n      var living_neighbors = 0;\n\n      for (var x = i - 1; x < i + 1; x++) {\n        for (var y = j - 1; y < j + 1; j++) {\n          var not_me = x == i && y == j;\n          var in_bounds = x >= 0 && y >= 0;\n\n          if (not_me && in_bounds) {\n            living_neighbors += this.state.cells[i][j];\n          }\n        }\n      }\n\n      return living_neighbors;\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, j) {\n      var cellWidth = Math.round(this.props.width / this.props.size);\n      return React.createElement(Cell, {\n        width: cellWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var table = [];\n\n      for (var i = 0; i < this.props.size; i++) {\n        var row = [];\n\n        for (var j = 0; j < this.props.size; j++) {\n          row.push(this.renderCell(i, j));\n        }\n\n        table.push(React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, row));\n      }\n\n      return table;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tableStyle = {\n        borderWidth: 2,\n        borderStyle: 'solid',\n        borderColor: '#232323',\n        borderRadius: 5,\n        width: this.props.width,\n        margin: 'auto'\n      };\n      return React.createElement(\"table\", {\n        style: tableStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderTable()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);","map":{"version":3,"sources":["/home/conrad/Desktop/game-of-life/src/Board.js"],"names":["React","Cell","Board","props","state","isRunning","cells","buildArray","sq","row","Array","size","fill","i","push","j","living_neighbors","x","y","not_me","in_bounds","cellWidth","Math","round","width","table","renderCell","tableStyle","borderWidth","borderStyle","borderColor","borderRadius","margin","renderTable","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Cell} from './Cell.js';\n\nexport class Board extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisRunning: false,\n\t\t\tcells: this.buildArray(),\n\t\t}\n\t}\n\n\tbuildArray(){\n\t\tlet sq = [];\n\t\tlet row = Array(this.props.size).fill(0);\n\t\tfor(let i = 0; i < this.props.size; i++){\n\t\t\tsq.push(row);\n\t\t}\n\t\treturn sq;\n\t}\n\n\tgetNeighborCount(i, j){\n\t\tlet living_neighbors = 0;\n\t\tfor(let x = i - 1; x < i + 1; x++){\n\t\t\tfor(let y = j - 1; y < j + 1; j++){\n\t\t\t\tlet not_me = (x==i && y==j);\n\t\t\t\tlet in_bounds = x >= 0 && y >= 0;\n\t\t\t\tif(not_me && in_bounds){\n\t\t\t\t\tliving_neighbors += this.state.cells[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn living_neighbors;\n\t}\n\n\trenderCell(i, j){\n\t\tlet cellWidth = Math.round(this.props.width/this.props.size);\n\t\treturn (\n\t\t\t<Cell \n\t\t\t\twidth={cellWidth}\n\t\t\t/>\n\t\t       );\n\t}\n\n\n\n\n\trenderTable(){\n\n\t\tlet table = [];\n\t\tfor(let i = 0; i < this.props.size; i++){\n\t\t\tlet row = [];\n\t\t\tfor(let j = 0; j < this.props.size; j++){\n\t\t\t\trow.push(this.renderCell(i, j));\n\t\t\t}\n\t\t\ttable.push(<tr>{row}</tr>);\n\t\t}\n\t\treturn table;\n\t}\n\n\trender(){\n\n\t\tlet tableStyle = {\n\t\t\tborderWidth: 2,\n\t\t\tborderStyle: 'solid',\n\t\t\tborderColor: '#232323',\n\t\t\tborderRadius: 5,\n\t\t\twidth: this.props.width,\n\t\t\tmargin: 'auto',\n\t\t}\n\t\treturn (<table style={tableStyle}><tbody>{this.renderTable()}</tbody></table>);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}